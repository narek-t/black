// ------------- MIXINS ------------- //
@mixin transition($time, $property: all, $easing: ease-in) {
    transition: $property $time $easing;
}

// ------------- VARIABLES ------------- //
$parallax-offset: 10vh;
$content-offset: 40vh;
$transition-speed: 1.6s;
$slide-number: 5;
$parallax-speed: 1.6s;

html, body {
  overflow: hidden;
}

.parallax-section {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  overflow: hidden;
  will-change: transform;
  backface-visibility: hidden;
  height: 100vh + $parallax-offset;
  position: fixed;
  width: 100%;
  transform: translateY($parallax-offset);
  @include transition($parallax-speed, all, cubic-bezier(0.22, 0.44, 0, 1));
  // padding-top: calc(15vh + 100px);
  // &:before {
  //   content: "";
  //   position: absolute;
  //   width: 100%;
  //   height: 100%;
  //   top: 0;
  //   left: 0;
  //   right: 0;
  //   bottom: 0;
  //   background-color: rgba(0,0,0,.3);
  // }
  &:first-child {
    transform: translateY(-$parallax-offset / 2);
    padding-top: 0;
    .content-wrapper {
      transform: translateY($parallax-offset /2);
    }
  }
}

/* Set stacking context of slides */
@for $i from 1 to ($slide-number + 1) {
    .parallax-section:nth-child(#{$i}) {
        z-index: ($slide-number + 1) - $i; 
    }
}

.content {
  &-wrapper {
  height: 110vh;
  // display: flex;
  // justify-content: center;
  // text-align: center;
  // flex-flow: column nowrap;
  // color: #fff;
  // font-family: Montserrat;
  // text-transform: uppercase;
  transform: translateY($content-offset);
  will-change: transform;
  backface-visibility: hidden;
  @include transition($transition-speed + .5, all, cubic-bezier(0.22, 0.44, 0, 1));
  }
}

// ------------- SET TRANSFORM VALUES ------------- //

.parallax-section.up-scroll {
  transform: translate3d(0,-$parallax-offset / 2,0);
  .content-wrapper {
    transform: translateY($parallax-offset / 2);
  }
  + .parallax-section {
    transform: translate3d(0,$parallax-offset,0);
      .content-wrapper {
        transform: translateY($parallax-offset);
      }
    }
}

.parallax-section.down-scroll {
  transform: translate3d(0,-(100vh + $parallax-offset),0);
  .content-wrapper {
    transform: translateY($content-offset);
  }
  + .parallax-section:not(.down-scroll) {
    transform: translate3d(0,-$parallax-offset / 2,0);
      .content-wrapper {
        transform: translateY($parallax-offset / 2);
      }
  }
}